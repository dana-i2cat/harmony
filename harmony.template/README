================================================================================
                                                                   
           _/_/_/    _/_/_/_/    _/_/    _/_/_/    _/      _/  _/_/_/_/   
          _/    _/  _/        _/    _/  _/    _/  _/_/  _/_/  _/          
         _/_/_/    _/_/_/    _/_/_/_/  _/    _/  _/  _/  _/  _/_/_/       
        _/    _/  _/        _/    _/  _/    _/  _/      _/  _/            
       _/    _/  _/_/_/_/  _/    _/  _/_/_/    _/      _/  _/_/_/_/         

                           - Creating a new Module -
================================================================================



Index:
======

0) Prerequisites
	0.1) Required Software
	0.2) Create the remote folder Structure
	0.3) Check it out

1) Using the Template
	1.1) Copy the data
	1.2) Adjust the files
	1.3) Setting the properties
	1.4) Editing the buildfile

2) Working with the new Module
	2.1) Working
	2.2) Committing
	


Step 0: Prerequisites
	0.1 Required Software
		- Unix (Linux/OS X) or Windows (bash is recommended)
		- Ant 1.7.0 or later (http://ant.apache.org)
		- Java 5 (http://java.sun.com) - not Java 6!
	0.2	Create the remote folder Structure:
		Create a new folder for you module at 
		https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules
		Create the subfolders "trunk", "branches" and "tags"
	0.3 Check it out
		Checkout the trunk folder as a new project in workspace, and (you seem
		to have done it already) checkout the template to a temporary location.


Step 1: Using the Template
	1.1	Copy the data
		Copy the Template to your new projects location using 
		"ant copy -Ddst=<location>" to get rid of the ".svn" folders
	1.2 Adjust the files
		Edit the projects name in the .project file (or be sure you don't copy
		the .project file)
	1.3 Setting the properties
		You need to edit the name of the jar and zip file in build.properties.
		All other properties are default values and should be correct to start
		working with the module.
	1.4 Editing the buildfile
		You'll need to edit the buildfile to add libs to your Module.
		To do so, you need to follow the Comments in build.xml, especially
		the init target which is responsible for downloading and updating libs.
		
		
Step 2: Working with the new Module
	2.1	Working with the modules is basically the same as working in main project.
		The only difference is handling the commits.
	2.2 Committing:
		Committing your changes to the svn repository, does _not_ mean, that any
		nsp instance will use your changes (e.g. in nightly build).
		If you have reached a stable state and want your changes to be used in
		the nsp, you need to upload you module as jar to the tool proxy.
		You just need to call "ant upload", enter Username and Password and the 
		ant target will do rest (compiling, compressing, uploading. ant upload
		does _not_ do a svn commit!!!)
	

See also: https://boennsch.cs.uni-bonn.de/trac/phosphorus/wiki/Module
 