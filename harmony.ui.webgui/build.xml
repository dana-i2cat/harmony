<!--
 /**
  * Build script template for network service plane modules.
  *
  * @author	<Your name (your email)>
  */
-->
<project basedir="." default="showTargets">
	<!--
		Please see README.1st for more details about the build scripts!
	//-->
	<import file="resources/build/build.common.xml" optional="true" />

	<!--
	/**
	 * Delete build folder.
	 */
	-->
	<target name="gwt.clean">
		<delete quiet="true" dir="${dir.build}" />
	</target>

	<!--
	/**
	 * Init stuff...
	 */
	//-->
	<target name="gwt.init">
		<!--<antcall target="init" />//-->

		<condition property="gwt.dev" value="gwt-dev-mac">
			<os family="mac" />
		</condition>
		<condition property="gwt.dev" value="gwt-dev-linux">
			<os family="unix" />
		</condition>
		<condition property="gwt.dev" value="gwt-dev-windows">
			<os family="windows" />
		</condition>
		<fail unless="gwt.dev" message="Unsupported OS: ${os.name}" />
		<getFile jar="${gwt.dev}" dst="${dir.libs}" />
	</target>

	<!--
	/**
	 * Compile gui server.
	 */
	-->
	<target name="server.compile">
		<antcall target="build" />
	</target>

	<target name="updateServer" depends="server.compile">
		<copy file="${dir.libs}/${jarfile}"
		      todir="${dir.webapps}/gui/WEB-INF/lib/"
		      overwrite="true" />
	</target>

	<!--
	/**
	 * Compile gui client using gwt.
	 */
	-->
	<target name="client.compile" depends="gwt.init">
		<echo>Using ${gwt.dev}.jar</echo>
		<!-- Run GWT Compiler //-->
		<java fork="true" classname="com.google.gwt.dev.GWTCompiler">
			<jvmarg value="-Xmx256m" />
			<arg line="-out '${dir.build}/www' management" />
			<classpath>
				<pathelement path="${dir.src}" />
				<pathelement path="${dir.resources}" />
				<pathelement location="${dir.libs}/gwt-user.jar" />
				<pathelement location="${dir.libs}/${gwt.dev}.jar" />
			</classpath>
		</java>
	</target>

	<!--
    /**
     * Start gwt debug tool.
     */
    -->
	<target name="debug"
	        description="Open Client in GWT Debug Shell (Requires GWT to be installed)">
		<!-- Run GWT Debugger //-->
		<java classname="com.google.gwt.dev.GWTShell" fork="true">
			<jvmarg line="${env.GWT_PLATTFORM_FLAGS}" />
			<arg line="-out '${dir.build}/www/gwt.debug' management" />
			<classpath>
				<pathelement path="${dir.src}" />
				<pathelement path="${dir.resources}" />
				<pathelement location="${dir.libs}/gwt-user.jar" />
				<pathelement location="${dir.libs}/${gwt.dev}.jar" />
			</classpath>
		</java>
	</target>

	<!--
	/**
	 * compile gui.
	 */
	-->
	<target name="deploy" depends="client.compile, server.compile">
		<fail>
			<condition>
				<not>
					<isset property="dir.webapps" />
				</not>
			</condition>Error: "dir.webapps" not set. Look at README first.</fail>
		<fail>
			<condition>
				<not>
					<isset property="guiImage" />
				</not>
			</condition>deploy Target is not ment to be called directly.</fail>

		<mkdir dir="temp" />

		<copy file="${guiImage}"
		      tofile="${dir.public}/testbed.jpg"
		      overwrite="true" />

		<!-- Add web.xml //-->
		<copy toDir="${dir.build}/www/management/WEB-INF/">
			<fileset dir="${dir.resources}">
				<include name="web.xml" />
			</fileset>
		</copy>

		<!-- Add publics //-->
		<copy toDir="${dir.build}/www/management/">
			<fileset dir="${dir.resources}/public" />
		</copy>

		<!-- Add jars //-->
		<copy toDir="${dir.build}/www/management/WEB-INF/lib">
			<fileset dir="${dir.libs}">
				<exclude name="gwt-*" />
				<exclude name="servlet-api.jar" />
			</fileset>
			<fileset dir="${dir.libs}">
				<include name="gwt-servlet.jar" />
			</fileset>
		</copy>

		<!-- Create WAR-File //-->
		<jar destfile="${dir.webapps}/${warfile}">
			<fileset dir="${dir.build}/www/management">
				<include name="**/*.*" />
			</fileset>
		</jar>

		<echo>War-File created at ${dir.webapps}/${warfile}</echo>
	</target>

	<target name="deployReal"
	        description="Build deployable web archive file for real testbed">
		<antcall target="deploy">
			<param name="guiImage" value="${dir.public}/testbed-real.jpg" />
		</antcall>
	</target>

	<target name="deployVirtual"
	        description="Build deployable web archive file for virtual testbed">
		<antcall target="deploy">
			<param name="guiImage" value="${dir.public}/testbed-virtual.jpg" />
		</antcall>
	</target>


	<!-- ================================================================================= //-->
	<!-- Don't edit below                                                                  //-->
	<!-- ================================================================================= //-->

	<!--
	/**
	 * Export a file or dir from repository
	 */
	//-->
	<macrodef name="exportFile">
		<attribute name="src" description="File to Download" />
		<attribute name="dst" description="Destination" />
		<attribute name="url"
		           default="https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules/common/ant/trunk/"
		           description="URL" />
		<sequential>
			<exec executable="svn" outputproperty="out">
				<arg line="export --no-auth-cache --username phosphorus-wp1-guest --password read4me @{url}/@{src} @{dst}" />
			</exec>
		</sequential>
	</macrodef>

	<!--
	/**
	 * Download needed build-scripts + keystore
	 */
	//-->
	<target name="prepare" description="Run this target bevor installing">
		<mkdir dir="resources/build/" />
		<echo>Getting prepare script...</echo>
		<exportFile src="resources/build/build.prepare.xml"
		            dst="build.prepare.xml" />

		<ant antfile="build.prepare.xml" />

		<delete quiet="true" file="build.prepare.xml" />

		<antcall target="showTargets" />
	</target>

	<!--
	/**
	 * Copy project to another location.
	 */
	-->
	<target name="copy"
	        description="Copy project to another location without copying .svn dirs">
		<fail unless="dst">
		dst parameter unset!
				
		You need to specify a target destination
				
		ant copy -Ddst=&lt;destination&gt;
			</fail>

		<copy todir="${dst}">
			<fileset dir=".">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
	</target>

	<!--
	/**
	 * Show all targets (Default).
	 */
	-->
	<target name="showTargets">
		<exec executable="ant">
			<arg value="-p" />
		</exec>

		<echo>
Available modules at https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules:
		</echo>

		<exec executable="svn">
			<arg line="list --no-auth-cache --username phosphorus-wp1-guest --password read4me https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules" />
		</exec>
	</target>
</project>
