package eu.ist_phosphorus.harmony.common.serviceinterface.reservation;

import org.w3c.dom.Element;
import org.apache.muse.core.AbstractCapability;

/**
 * reservation server.
 *
 * ReservationWS.java
 * Mon Mar 05 16:22:33 CET 2012
 * Generated by the Apache Muse Code Generation Tool
 */
 public class ReservationWS extends AbstractCapability implements IReservationWS {
    /**
     * createReservation Handler.
     *
     * @param createReservation Request
     * @return createReservation Response
     * @throws Exception In case of errors
     */
    public Element createReservation (final Element createReservation)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("createReservation", createReservation);
    }

    /**
     * activate Handler.
     *
     * @param activate Request
     * @return activate Response
     * @throws Exception In case of errors
     */
    public Element activate (final Element activate)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("activate", activate);
    }

    /**
     * bind Handler.
     *
     * @param bind Request
     * @return bind Response
     * @throws Exception In case of errors
     */
    public Element bind (final Element bind)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("bind", bind);
    }

    /**
     * isAvailable Handler.
     *
     * @param isAvailable Request
     * @return isAvailable Response
     * @throws Exception In case of errors
     */
    public Element isAvailable (final Element isAvailable)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("isAvailable", isAvailable);
    }

    /**
     * notification Handler.
     *
     * @param notification Request
     * @return notification Response
     * @throws Exception In case of errors
     */
    public Element notification (final Element notification)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("notification", notification);
    }

    /**
     * cancelReservation Handler.
     *
     * @param cancelReservation Request
     * @return cancelReservation Response
     * @throws Exception In case of errors
     */
    public Element cancelReservation (final Element cancelReservation)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("cancelReservation", cancelReservation);
    }

    /**
     * getReservations Handler.
     *
     * @param getReservations Request
     * @return getReservations Response
     * @throws Exception In case of errors
     */
    public Element getReservations (final Element getReservations)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("getReservations", getReservations);
    }

    /**
     * getReservation Handler.
     *
     * @param getReservation Request
     * @return getReservation Response
     * @throws Exception In case of errors
     */
    public Element getReservation (final Element getReservation)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("getReservation", getReservation);
    }

    /**
     * cancelJob Handler.
     *
     * @param cancelJob Request
     * @return cancelJob Response
     * @throws Exception In case of errors
     */
    public Element cancelJob (final Element cancelJob)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("cancelJob", cancelJob);
    }

    /**
     * getStatus Handler.
     *
     * @param getStatus Request
     * @return getStatus Response
     * @throws Exception In case of errors
     */
    public Element getStatus (final Element getStatus)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("getStatus", getStatus);
    }

    /**
     * completeJob Handler.
     *
     * @param completeJob Request
     * @return completeJob Response
     * @throws Exception In case of errors
     */
    public Element completeJob (final Element completeJob)
             throws Exception {
        return CommonReservationHandler.getInstance().handle("completeJob", completeJob);
    }

}