<!--
 /**
  * Build script for the Nightly Build Process.
  *
  * @author	Alexander Willner (willner@cs.uni-bonn.de)
  */
-->
<project basedir="." default="showTargets">
	<!--
		Please see README.1st for more details about the build scripts!
	//-->
	<import file="resources/build/build.common.xml" optional="true" />

	<target name="measureScalability" description="Measure the scalability">
		<antcall target="build" />
		<condition property="includes" value="${class}.class" else="MeasureScalability.class">
			<isset property="class" />
		</condition>

		<junit printsummary="true" showoutput="true" failureproperty="test.failure" haltonfailure="false">
			<classpath>
				<pathelement path="${dir.resources}" />
				<path refid="classpath.tools" />
			</classpath>
			<batchtest>
				<fileset dir="${dir.build}" includes="**/${includes}" excludes="**/*$$*" />
			</batchtest>
		</junit>
		<fail message="test failed" if="test.failure" />
	</target>

	<target name="testRealtestbed" description="Test real testbed">
		<antcall target="build" />
		<condition property="includes" value="${class}.class" else="RealTestbedTests*">
			<isset property="class" />
		</condition>

		<junit printsummary="true" showoutput="true" failureproperty="test.failure" haltonfailure="false">
			<classpath>
				<pathelement path="${dir.resources}" />
				<path refid="classpath.tools" />
			</classpath>
			<batchtest>
				<fileset dir="${dir.build}" includes="**/${includes}" />
			</batchtest>
		</junit>
		<fail message="test failed" if="test.failure" />
	</target>

	<target name="testVirtualtestbed" description="Test virtual testbed">
		<antcall target="build" />
		<condition property="includes" value="${class}.class" else="VirtualTestbedTests*">
			<isset property="class" />
		</condition>

		<junit printsummary="true" showoutput="true" failureproperty="test.failure" haltonfailure="false">
			<classpath>
				<pathelement path="${dir.resources}" />
				<path refid="classpath.tools" />
			</classpath>
			<batchtest>
				<fileset dir="${dir.build}" includes="**/${includes}" excludes="**/*$$*" />
			</batchtest>
		</junit>
		<fail message="test failed" if="test.failure" />
	</target>
	
	<target name="testDataPlane" description="Test data plane status">
		<antcall target="build" />
		<condition property="includes" value="${class}.class" else="DataPlaneTests*">
			<isset property="class" />
		</condition>

		<junit printsummary="true" showoutput="true" failureproperty="test.failure" haltonfailure="false">
			<classpath>
				<pathelement path="${dir.resources}" />
				<path refid="classpath.tools" />
			</classpath>
			<batchtest>
				<fileset dir="${dir.build}" includes="**/${includes}" />
			</batchtest>
		</junit>
		<fail message="test failed" if="test.failure" />
	</target>

	<target name="report.webservice" if="test.webservice">
		<mkdir dir="${dir.doc}/ws" />
		<exec dir="${basedir}" executable="${dir.scripts}/testWebservices.bsh" spawn="false" />
		<mkdir dir="${dir.doc.junit}/ws" />
		<mkdir dir="${dir.doc.coverage}/ws" />
		<junitreport todir="${dir.doc.junit}/ws">
			<fileset dir="${dir.doc}/ws">
				<include name="**/TEST-*.xml" />
			</fileset>
			<report todir="${dir.doc.junit}/ws" />
		</junitreport>

		<taskdef resource="emma_ant.properties" classpathref="ant.tools" />

		<emma>
			<report sourcepath="${dir.src}">
				<fileset dir="${dir.doc}/ws">
					<include name="**/*.emma" />
				</fileset>
				<html outfile="${dir.doc.coverage}/ws/index.html" />
			</report>
		</emma>

	</target>

	<target name="report.modules">
		<mkdir dir="${dir.doc}/direct" />
		<exec dir="${basedir}" executable="${dir.scripts}/testModules.bsh" spawn="false" />
		<mkdir dir="${dir.doc.junit}/direct" />
		<mkdir dir="${dir.doc.coverage}/direct" />
		<junitreport todir="${dir.doc.junit}/direct">
			<fileset dir="${dir.doc}/direct">
				<include name="**/TEST-*.xml" />
			</fileset>
			<report todir="${dir.doc.junit}/direct" />
		</junitreport>

		<taskdef resource="emma_ant.properties" classpathref="ant.tools" />

		<emma>
			<report sourcepath="${dir.src}">
				<fileset dir="${dir.doc}/direct">
					<include name="**/*.emma" />
				</fileset>
				<html outfile="${dir.doc.coverage}/direct/index.html" />
			</report>
		</emma>
	</target>

	<target name="report" description="Generate the test results">
		<antcall target="report.modules" />
		<antcall target="report.webservice" />
		<echo>Please have a look at: ${dir.doc.junit}/direct/index.html</echo>
		<echo>Please have a look at: ${dir.doc.coverage}/direct/index.html</echo>
		<echo>Please have a look at: ${dir.doc.junit}/ws/index.html</echo>
		<echo>Please have a look at: ${dir.doc.coverage}/ws/index.html</echo>
	</target>

	<!--
	
		you can add any module related targets here
	
	//-->
	
	

	<!-- ================================================================================= //-->
	<!-- Don't edit below                                                                  //-->
	<!-- ================================================================================= //-->

	<!--
	/**
	 * Export a file or dir from repository
	 */
	//-->
	<macrodef name="exportFile">
		<attribute name="src" description="File to Download" />
		<attribute name="dst" description="Destination" />
		<attribute name="url" default="https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules/common/ant/trunk/" description="URL" />
		<sequential>
			<exec executable="svn" outputproperty="out">
				<arg line="export --no-auth-cache --username phosphorus-wp1-guest --password read4me @{url}/@{src} @{dst}" />
			</exec>
		</sequential>
	</macrodef>

	<!--
	/**
	 * Download needed build-scripts + keystore
	 */
	//-->
	<target name="prepare" description="Run this target bevor installing">
		<mkdir dir="resources/build/" />
		<echo>Getting prepare script...</echo>
		<exportFile src="resources/build/build.prepare.xml" dst="build.prepare.xml" />

		<ant antfile="build.prepare.xml" />

		<delete quiet="true" file="build.prepare.xml" />

		<antcall target="showTargets" />
	</target>

	<!--
	/**
	 * Copy project to another location.
	 */
	-->
	<target name="copy" description="Copy project to another location without copying .svn dirs">
		<fail unless="dst">
		dst parameter unset!
				
		You need to specify a target destination
				
		ant copy -Ddst=&lt;destination&gt;
			</fail>

		<copy todir="${dst}">
			<fileset dir=".">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
	</target>

	<!--
	/**
	 * Show all targets (Default).
	 */
	-->
	<target name="showTargets">
		<exec executable="ant">
			<arg value="-p" />
		</exec>

		<echo>
Available modules at https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules:
		</echo>

		<exec executable="svn">
			<arg line="list --no-auth-cache --username phosphorus-wp1-guest --password read4me https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules" />
		</exec>
	</target>
</project>
