#!/bin/bash

USERNAME=phosphorus-wp1-guest
PASSWORD=read4me
URL=https://svn.uva.netherlight.nl/projects/phosphorus-wp1/modules/
ROOT=`pwd`
DIR_NIGHTLY=$ROOT/temp/module
DIR_RESULTS=$ROOT/doc/direct
DIR_RESULTS_JUNIT=$DIR_RESULTS/xml
DIR_RESULTS_COVER=$DIR_RESULTS/emma
MODULES=( \
idb/trunk \
adapter/dummy/trunk \
adapter/argon/trunk \
common/serviceinterface/trunk \
common/security/trunk \
common/utils/trunk \
ui/reservationcli/trunk \
translator/idc/trunk \
#adapter/thin/trunk \
#adapter/uclp/trunk \
#common/ant/trunk \
#ui/topologygui/trunk \
#ui/webgui/trunk \
)

rm -rf "$DIR_RESULTS";
mkdir -p "$DIR_RESULTS_JUNIT";
mkdir -p "$DIR_RESULTS_COVER";
mkdir -p "$DIR_NIGHTLY";

for ((i=0;i<${#MODULES[*]};i++)); do
   module="${MODULES[${i}]}";
   echo "==================";
   echo "Testing $module...";
   echo "==================";
   rm -rf $DIR_NIGHTLY;
   svn co --username $USERNAME --password $PASSWORD $URL/$module $DIR_NIGHTLY
   if [ ! -d "$DIR_NIGHTLY" ]; then
     echo "Checkout not possible."
   else
     cd $DIR_NIGHTLY
     cp $ROOT/build.local.properties .

     ###########################################################################
     ant prepare

     if [ "$module" == "common/serviceinterface/trunk" ]; then
       ant generate
     fi
     ###########################################################################


     ###########################################################################
     if [ "$module" == "idb/trunk" ]; then
       perl -p -e 's/passViaWebservice\s*=.*/passViaWebservice = true/' resources/properties/idb.properties > tmp; mv tmp resources/properties/idb.properties
     fi

     if [ "$module" == "adapter/dummy/trunk" ]; then
       dir=$DIR_NIGHTLY
       mkdir "$dir"_2
       cp -r "$dir"/* "$dir"_2
       cp "$dir"/.classpath "$dir"_2/
       cd "$dir"_2

       perl -p -e 's/warfile\s*=.*/warfile = harmony-adapter-dummy2.war/' build.properties > tmp; mv tmp build.properties

       perl -p -e 's/domain.name\s*=.*/domain.name = localDummy2/' resources/properties/hsiDummy.properties > tmp; mv tmp resources/properties/hsiDummy.properties
       perl -p -e 's/domain.TNAPrefix0\s*=.*/domain\.TNAPrefix0 = 129.0.0.0\/16/' resources/properties/hsiDummy.properties > tmp; mv tmp resources/properties/hsiDummy.properties

       perl -p -e "s/domain.reservationEPR\s*=.*/domain.reservationEPR = http:\/\/localhost:8080\/harmony-adapter-dummy2\/services\/Reservation/" resources/properties/hsiDummy.properties > tmp; mv tmp resources/properties/hsiDummy.properties
       perl -p -e "s/domain.topologyEPR\s*=.*/domain.topologyEPR = http:\/\/localhost:8080\/harmony-adapter-dummy2\/services\/Topology/" resources/properties/hsiDummy.properties > tmp; mv tmp resources/properties/hsiDummy.properties
       perl -p -e "s/domain.notificationEPR\s*=.*/domain.notificationEPR = http:\/\/localhost:8080\/harmony-adapter-dummy2\/services\/Notification/" resources/properties/hsiDummy.properties > tmp; mv tmp resources/properties/hsiDummy.properties

       ant deploy
       cd -
       rm -rf "$dir"_2
     fi

     ant deploy
     ###########################################################################


     ###########################################################################
     if [ "$module" == "idb/trunk" ]; then
       perl -p -e 's/passViaWebservice\s*=.*/passViaWebservice = false/' resources/properties/idb.properties > tmp; mv tmp resources/properties/idb.properties
     fi
     perl -p -e 's/test.callWebservice\s*=.*/test.callWebservice = false/' resources/properties/test.properties > tmp; mv tmp resources/properties/test.properties
     ant test
     ###########################################################################


     ###########################################################################
     mkdir -p $DIR_RESULTS_COVER/$module
     cp dist/reports/*.emma $DIR_RESULTS_COVER/$module
     mkdir -p $DIR_RESULTS_JUNIT/$module
     cp doc/junit/xml/* $DIR_RESULTS_JUNIT/$module
     ###########################################################################

   fi
   cd $ROOT
   rm -rf $DIR_NIGHTLY;
done
