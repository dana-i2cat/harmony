================================================================================
                                                                   
           _/_/_/    _/_/_/_/    _/_/    _/_/_/    _/      _/  _/_/_/_/   
          _/    _/  _/        _/    _/  _/    _/  _/_/  _/_/  _/          
         _/_/_/    _/_/_/    _/_/_/_/  _/    _/  _/  _/  _/  _/_/_/       
        _/    _/  _/        _/    _/  _/    _/  _/      _/  _/            
       _/    _/  _/_/_/_/  _/    _/  _/_/_/    _/      _/  _/_/_/_/         

                    - IST Phosphorus Harmony Adapter -
================================================================================
                                      Alexander Willner (willner@cs.uni-bonn.de)
                                                           version: 2009-07-09.1


Prerequisites
-------------
 * Eclipse IDE 3.x with SVN plugin (tested with Eclipse 3.4)
 * Sun Java 6
 * Apache Ant 1.7
 * Servlet container (tested with Tomact 6 and Jetty 6)
 * export ANT_OPTS="-Djavax.net.ssl.trustStore=resources/utils/keystore"



Step-by-Step
------------

Step 0: Be sure that your environment is ok (see Attachment 1)

Step 1: Start Eclipse (e.g. version 3.4)

Step 2: Add our repository:
https://svn.uva.netherlight.nl/projects/phosphorus-wp1/

Step 3: Checkout the modules: (right mouse button > Check out)
modules/adapter/dummy/trunk
modules/ui/reservationcli/trunk

Step 4: Initialise modules:
cd ~/workspace/harmony.adapter.dummy; ant prepare; ant build
cd ~/workspace/harmony.ui.reservationcli; ant prepare; ant build

Step 5: Go the the Eclipse Java view and refresh the modules. You shouldn't see any errors now.

Step 6: Configure the adapter: nano ~/workspace/harmony.adapter.dummy/resources/properties/hsiDummy.properties
Set:
 * domain.reservationEPR = http://pizza1.uva.netherlight.nl:8080/harmony-adapter-dummy/Reservation
 * domain.topologyEPR = http://pizza1.uva.netherlight.nl:8080/harmony-adapter-dummy/Topology
 * domain.notificationEPR = http://pizza1.uva.netherlight.nl:8080/harmony-adapter-dummy/Notification
 * parent.reservationEPR = http://nsp.cs.uni-bonn.de:8080/harmony-idb/services/Reservation
 * parent.topologyEPR = http://nsp.cs.uni-bonn.de:8080/harmony-idb/services/Topology
To test it locally:
 * Comment out (add a "#") the parent.* lines

Step 7: Deploy the adapter
 * cd ~/workspace/harmony.adapter.dummy
 * echo dir.webapps=$WEBAPPS_HOME > build.local.properties
 * ant build deploy
 * Start your servlet container and have a look at the logs

Step 8: Create a test reservation
 * cd ~/workspace/harmony.ui.reservationcli
 * ./resources/scripts/reservationClient.bsh -e http://pizza1.uva.netherlight.nl:8080/harmony-adapter-dummy/Reservation -a create
 * Look at the servlet logs and have a closer look at the class "CommandlineReservationClient"

Step 9: Test the module via webservice
 * cd ~/workspace/harmony.adapter.dummy
 * nano resources/properties/test.properties;
   * change value to test.callWebservice = true
 * ant test
 * Have a close look at the test classes

Step 10: Test the module via local calls
 * cd ~/workspace/harmony.adapter.dummy
 * nano resources/properties/test.properties;
   * change value to test.callWebservice = false
 * You could now stop the servlet container
 * ant test
 * Have a close look at the test classes


Attachment 1:
-------------

#!/bin/bash

#########################
# HOWTO: ". ./env.sh";  #
#########################


HARMONY_HOME=/opt/harmony
TOOLS_HOME=$HARMONY_HOME/tools


echo "Exporting configuration...";
export ANT_HOME=$TOOLS_HOME/ant/
export ANT_OPTS="$ANT_OPTS -Djavax.net.ssl.trustStore=resources/utils/keystore -XX:MaxPermSize=512M -Xms512M -Xmx512M"
export JAVA_HOME=$TOOLS_HOME/jdk1.6/
export JAVA_OPTS="-XX:+UseBiasedLocking -XX:+AggressiveOpts -XX:+UseParallelOldGC -Xss128k -XX:+UseLargePages -Xbatch -XX:+UseNUMA"
export PATH=$JAVA_HOME/bin:$ANT_HOME/bin/:$PATH
export JETTY_HOME=$TOOLS_HOME/jetty
export CATALINA_HOME=$TOOLS_HOME/tomcat
export WEBAPPS_HOME=$CATALINA_HOME/webapps

echo "You're now running...";
java -version 2>&1|head -n1 && ant -version

